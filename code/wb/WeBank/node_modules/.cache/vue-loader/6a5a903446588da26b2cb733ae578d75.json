{"remainingRequest":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\charts\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\charts\\src\\main.vue","mtime":1681782973581},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1681782976971},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1681783170949}],"contextDependencies":[],"result":["\r\nimport { uuid } from '../../../util/index'\r\n\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport Charts from '@jiaminghi/charts'\r\n\r\nexport default {\r\n  name: 'DvCharts',\r\n  mixins: [autoResize],\r\n  props: {\r\n    option: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      ref: `charts-container-${id}`,\r\n      chartRef: `chart-${id}`,\r\n\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n    option () {\r\n      let { chart, option } = this\r\n\r\n      if (!chart) return\r\n\r\n      if (!option) option = {}\r\n\r\n      chart.setOption(option, true)\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { initChart } = this\r\n\r\n      initChart()\r\n    },\r\n    initChart () {\r\n      const { $refs, chartRef, option } = this\r\n\r\n      const chart = this.chart = new Charts($refs[chartRef])\r\n\r\n      if (!option) return\r\n\r\n      chart.setOption(option)\r\n    },\r\n    onResize () {\r\n      const { chart } = this\r\n\r\n      if (!chart) return\r\n\r\n      chart.resize()\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAOA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/charts/src","sourcesContent":["<template>\r\n  <div class=\"dv-charts-container\" :ref=\"ref\">\r\n    <div class=\"charts-canvas-container\" :ref=\"chartRef\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { uuid } from '../../../util/index'\r\n\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport Charts from '@jiaminghi/charts'\r\n\r\nexport default {\r\n  name: 'DvCharts',\r\n  mixins: [autoResize],\r\n  props: {\r\n    option: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      ref: `charts-container-${id}`,\r\n      chartRef: `chart-${id}`,\r\n\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n    option () {\r\n      let { chart, option } = this\r\n\r\n      if (!chart) return\r\n\r\n      if (!option) option = {}\r\n\r\n      chart.setOption(option, true)\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { initChart } = this\r\n\r\n      initChart()\r\n    },\r\n    initChart () {\r\n      const { $refs, chartRef, option } = this\r\n\r\n      const chart = this.chart = new Charts($refs[chartRef])\r\n\r\n      if (!option) return\r\n\r\n      chart.setOption(option)\r\n    },\r\n    onResize () {\r\n      const { chart } = this\r\n\r\n      if (!chart) return\r\n\r\n      chart.resize()\r\n    }\r\n  }\r\n}\r\n</script>"]}]}