{"remainingRequest":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration2\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration2\\src\\main.vue","mtime":1681782973603},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1681782976971},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1681783170949}],"contextDependencies":[],"result":["\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDecoration2',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    reverse: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dur: {\r\n      type: Number,\r\n      default: 6\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'decoration-2',\r\n\r\n      x: 0,\r\n      y: 0,\r\n\r\n      w: 0,\r\n      h: 0,\r\n\r\n      defaultColor: ['#3faacb', '#fff'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    },\r\n    reverse () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    calcSVGData () {\r\n      const { reverse, width, height } = this\r\n\r\n      if (reverse) {\r\n        this.w = 1\r\n        this.h = height\r\n        this.x = width / 2\r\n        this.y = 0\r\n      } else {\r\n        this.w = width\r\n        this.h = 1\r\n        this.x = 0\r\n        this.y = height / 2\r\n      }\r\n    },\r\n    onResize () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";AAiCA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"main.vue","sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/decoration2/src","sourcesContent":["<template>\r\n  <div class=\"dv-decoration-2\" :ref=\"ref\">\r\n    <svg :width=\"`${width}px`\" :height=\"`${height}px`\">\r\n      <rect :x=\"x\" :y=\"y\" :width=\"w\" :height=\"h\" :fill=\"mergedColor[0]\">\r\n        <animate\r\n          :attributeName=\"reverse ? 'height' : 'width'\"\r\n          from=\"0\"\r\n          :to=\"reverse ? height : width\"\r\n          :dur=\"`${dur}s`\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\".42,0,.58,1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n\r\n      <rect :x=\"x\" :y=\"y\" width=\"1\" height=\"1\" :fill=\"mergedColor[1]\">\r\n        <animate\r\n          :attributeName=\"reverse ? 'y' : 'x'\"\r\n          from=\"0\"\r\n          :to=\"reverse ? height : width\"\r\n          :dur=\"`${dur}s`\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\"0.42,0,0.58,1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDecoration2',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    reverse: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dur: {\r\n      type: Number,\r\n      default: 6\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'decoration-2',\r\n\r\n      x: 0,\r\n      y: 0,\r\n\r\n      w: 0,\r\n      h: 0,\r\n\r\n      defaultColor: ['#3faacb', '#fff'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    },\r\n    reverse () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    calcSVGData () {\r\n      const { reverse, width, height } = this\r\n\r\n      if (reverse) {\r\n        this.w = 1\r\n        this.h = height\r\n        this.x = width / 2\r\n        this.y = 0\r\n      } else {\r\n        this.w = width\r\n        this.h = 1\r\n        this.x = 0\r\n        this.y = height / 2\r\n      }\r\n    },\r\n    onResize () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"]}]}