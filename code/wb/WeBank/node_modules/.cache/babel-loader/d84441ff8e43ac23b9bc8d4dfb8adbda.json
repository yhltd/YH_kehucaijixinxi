{"remainingRequest":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration2\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration2\\src\\main.vue","mtime":1681782973603},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\babel.config.js","mtime":1681782968933},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1681782976971},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1681783170949}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport autoResize from \"../../../mixin/autoResize\";\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nexport default {\n  name: 'DvDecoration2',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    },\n    dur: {\n      type: Number,\n      default: 6\n    }\n  },\n  data: function data() {\n    return {\n      ref: 'decoration-2',\n      x: 0,\n      y: 0,\n      w: 0,\n      h: 0,\n      defaultColor: ['#3faacb', '#fff'],\n      mergedColor: []\n    };\n  },\n  watch: {\n    color: function color() {\n      var mergeColor = this.mergeColor;\n      mergeColor();\n    },\n    reverse: function reverse() {\n      var calcSVGData = this.calcSVGData;\n      calcSVGData();\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit: function afterAutoResizeMixinInit() {\n      var calcSVGData = this.calcSVGData;\n      calcSVGData();\n    },\n    calcSVGData: function calcSVGData() {\n      var reverse = this.reverse,\n        width = this.width,\n        height = this.height;\n      if (reverse) {\n        this.w = 1;\n        this.h = height;\n        this.x = width / 2;\n        this.y = 0;\n      } else {\n        this.w = width;\n        this.h = 1;\n        this.x = 0;\n        this.y = height / 2;\n      }\n    },\n    onResize: function onResize() {\n      var calcSVGData = this.calcSVGData;\n      calcSVGData();\n    },\n    mergeColor: function mergeColor() {\n      var color = this.color,\n        defaultColor = this.defaultColor;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    }\n  },\n  mounted: function mounted() {\n    var mergeColor = this.mergeColor;\n    mergeColor();\n  }\n};",{"version":3,"names":["autoResize","deepMerge","deepClone","name","mixins","props","color","type","Array","default","_default","reverse","Boolean","dur","Number","data","ref","x","y","w","h","defaultColor","mergedColor","watch","mergeColor","calcSVGData","methods","afterAutoResizeMixinInit","width","height","onResize","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/decoration2/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-decoration-2\" :ref=\"ref\">\r\n    <svg :width=\"`${width}px`\" :height=\"`${height}px`\">\r\n      <rect :x=\"x\" :y=\"y\" :width=\"w\" :height=\"h\" :fill=\"mergedColor[0]\">\r\n        <animate\r\n          :attributeName=\"reverse ? 'height' : 'width'\"\r\n          from=\"0\"\r\n          :to=\"reverse ? height : width\"\r\n          :dur=\"`${dur}s`\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\".42,0,.58,1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n\r\n      <rect :x=\"x\" :y=\"y\" width=\"1\" height=\"1\" :fill=\"mergedColor[1]\">\r\n        <animate\r\n          :attributeName=\"reverse ? 'y' : 'x'\"\r\n          from=\"0\"\r\n          :to=\"reverse ? height : width\"\r\n          :dur=\"`${dur}s`\"\r\n          calcMode=\"spline\"\r\n          keyTimes=\"0;1\"\r\n          keySplines=\"0.42,0,0.58,1\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </rect>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDecoration2',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    reverse: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dur: {\r\n      type: Number,\r\n      default: 6\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'decoration-2',\r\n\r\n      x: 0,\r\n      y: 0,\r\n\r\n      w: 0,\r\n      h: 0,\r\n\r\n      defaultColor: ['#3faacb', '#fff'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    },\r\n    reverse () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    calcSVGData () {\r\n      const { reverse, width, height } = this\r\n\r\n      if (reverse) {\r\n        this.w = 1\r\n        this.h = height\r\n        this.x = width / 2\r\n        this.y = 0\r\n      } else {\r\n        this.w = width\r\n        this.h = 1\r\n        this.x = 0\r\n        this.y = height / 2\r\n      }\r\n    },\r\n    onResize () {\r\n      const { calcSVGData } = this\r\n\r\n      calcSVGData()\r\n    },\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    }\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"],"mappings":";AAiCA,OAAAA,UAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAJ,UAAA;EACAK,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;IACAC,OAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,OAAA;IACA;IACAI,GAAA;MACAN,IAAA,EAAAO,MAAA;MACAL,OAAA;IACA;EACA;EACAM,IAAA,WAAAA,KAAA;IACA;MACAC,GAAA;MAEAC,CAAA;MACAC,CAAA;MAEAC,CAAA;MACAC,CAAA;MAEAC,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAjB,KAAA,WAAAA,MAAA;MACA,IAAAkB,UAAA,QAAAA,UAAA;MAEAA,UAAA;IACA;IACAb,OAAA,WAAAA,QAAA;MACA,IAAAc,WAAA,QAAAA,WAAA;MAEAA,WAAA;IACA;EACA;EACAC,OAAA;IACAC,wBAAA,WAAAA,yBAAA;MACA,IAAAF,WAAA,QAAAA,WAAA;MAEAA,WAAA;IACA;IACAA,WAAA,WAAAA,YAAA;MACA,IAAAd,OAAA,QAAAA,OAAA;QAAAiB,KAAA,QAAAA,KAAA;QAAAC,MAAA,QAAAA,MAAA;MAEA,IAAAlB,OAAA;QACA,KAAAQ,CAAA;QACA,KAAAC,CAAA,GAAAS,MAAA;QACA,KAAAZ,CAAA,GAAAW,KAAA;QACA,KAAAV,CAAA;MACA;QACA,KAAAC,CAAA,GAAAS,KAAA;QACA,KAAAR,CAAA;QACA,KAAAH,CAAA;QACA,KAAAC,CAAA,GAAAW,MAAA;MACA;IACA;IACAC,QAAA,WAAAA,SAAA;MACA,IAAAL,WAAA,QAAAA,WAAA;MAEAA,WAAA;IACA;IACAD,UAAA,WAAAA,WAAA;MACA,IAAAlB,KAAA,QAAAA,KAAA;QAAAe,YAAA,QAAAA,YAAA;MAEA,KAAAC,WAAA,GAAArB,SAAA,CAAAC,SAAA,CAAAmB,YAAA,SAAAf,KAAA;IACA;EACA;EACAyB,OAAA,WAAAA,QAAA;IACA,IAAAP,UAAA,QAAAA,UAAA;IAEAA,UAAA;EACA;AACA"}]}