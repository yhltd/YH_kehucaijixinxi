{"remainingRequest":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js!E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue","mtime":499162500000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\babel.config.js","mtime":1657619760000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"E:/yho169/\\u7D20\\u6750/\\u89E3\\u538B\\u5305/wb/WeBank/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"E:/yho169/\\u7D20\\u6750/\\u89E3\\u538B\\u5305/wb/WeBank/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es6.array.map\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/yho169/\\u7D20\\u6750/\\u89E3\\u538B\\u5305/wb/WeBank/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nimport { randomExtend, getPointDistance, uuid } from \"../../../util/index\";\nimport autoResize from \"../../../mixin/autoResize\";\nexport default {\n  name: 'DvFlylineChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    var id = uuid();\n    return {\n      ref: 'dv-flyline-chart',\n      unique: Math.random(),\n      maskId: \"flyline-mask-id-\".concat(id),\n      maskCircleId: \"mask-circle-id-\".concat(id),\n      gradientId: \"gradient-id-\".concat(id),\n      gradient2Id: \"gradient2-id-\".concat(id),\n      defaultConfig: {\n        /**\n         * @description Flyline chart center point\n         * @type {Array<Number>}\n         * @default centerPoint = [0, 0]\n         */\n        centerPoint: [0, 0],\n        /**\n         * @description Flyline start points\n         * @type {Array<Array<Number>>}\n         * @default points = []\n         * @example points = [[10, 10], [100, 100]]\n         */\n        points: [],\n        /**\n         * @description Flyline width\n         * @type {Number}\n         * @default lineWidth = 1\n         */\n        lineWidth: 1,\n        /**\n         * @description Orbit color\n         * @type {String}\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\n         */\n        orbitColor: 'rgba(103, 224, 227, .2)',\n        /**\n         * @description Flyline color\n         * @type {String}\n         * @default orbitColor = '#ffde93'\n         */\n        flylineColor: '#ffde93',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Flyline radius\n         * @type {Number}\n         * @default flylineRadius = 100\n         */\n        flylineRadius: 100,\n        /**\n         * @description Flyline animation duration\n         * @type {Array<Number>}\n         * @default duration = [20, 30]\n         */\n        duration: [20, 30],\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true,\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgUrl = ''\n         * @example bgImgUrl = './img/bg.jpg'\n         */\n        bgImgUrl: '',\n        /**\n         * @description Text configuration\n         * @type {Object}\n         */\n        text: {\n          /**\n           * @description Text offset\n           * @type {Array<Number>}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Halo configuration\n         * @type {Object}\n         */\n        halo: {\n          /**\n           * @description Weather to show halo\n           * @type {Boolean}\n           * @default show = true\n           * @example show = true | false\n           */\n          show: true,\n          /**\n           * @description Halo animation duration (10 = 1s)\n           * @type {Number}\n           * @default duration = 30\n           */\n          duration: 30,\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo max radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Center point img configuration\n         * @type {Object}\n         */\n        centerPointImg: {\n          /**\n           * @description Center point img width\n           * @type {Number}\n           * @default width = 40\n           */\n          width: 40,\n          /**\n           * @description Center point img height\n           * @type {Number}\n           * @default height = 40\n           */\n          height: 40,\n          /**\n           * @description Center point img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        },\n        /**\n         * @description Points img configuration\n         * @type {Object}\n         * @default radius = 120\n         */\n        pointsImg: {\n          /**\n           * @description Points img width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Points img height\n           * @type {Number}\n           * @default height = 15\n           */\n          height: 15,\n          /**\n           * @description Points img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        }\n      },\n      mergedConfig: null,\n      paths: [],\n      lengths: [],\n      times: [],\n      texts: []\n    };\n  },\n  watch: {\n    config: function config() {\n      var calcData = this.calcData;\n      calcData();\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit: function afterAutoResizeMixinInit() {\n      var calcData = this.calcData;\n      calcData();\n    },\n    onResize: function onResize() {\n      var calcData = this.calcData;\n      calcData();\n    },\n    calcData: function () {\n      var _calcData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var mergeConfig, createFlylinePaths, calcLineLengths, calcTimes, calcTexts;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              mergeConfig = this.mergeConfig, createFlylinePaths = this.createFlylinePaths, calcLineLengths = this.calcLineLengths;\n              mergeConfig();\n              createFlylinePaths();\n              _context.next = 5;\n              return calcLineLengths();\n            case 5:\n              calcTimes = this.calcTimes, calcTexts = this.calcTexts;\n              calcTimes();\n              calcTexts();\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function calcData() {\n        return _calcData.apply(this, arguments);\n      }\n      return calcData;\n    }(),\n    mergeConfig: function mergeConfig() {\n      var config = this.config,\n        defaultConfig = this.defaultConfig;\n      var mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {});\n      var points = mergedConfig.points;\n      mergedConfig.points = points.map(function (item) {\n        if (item instanceof Array) {\n          return {\n            position: item,\n            text: ''\n          };\n        }\n        return item;\n      });\n      this.mergedConfig = mergedConfig;\n    },\n    createFlylinePaths: function createFlylinePaths() {\n      var getPath = this.getPath,\n        mergedConfig = this.mergedConfig,\n        width = this.width,\n        height = this.height;\n      var centerPoint = mergedConfig.centerPoint,\n        points = mergedConfig.points,\n        relative = mergedConfig.relative;\n      points = points.map(function (_ref) {\n        var position = _ref.position;\n        return position;\n      });\n      if (relative) {\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]];\n        points = points.map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n            x = _ref3[0],\n            y = _ref3[1];\n          return [width * x, height * y];\n        });\n      }\n      this.paths = points.map(function (point) {\n        return getPath(centerPoint, point);\n      });\n    },\n    getPath: function getPath(center, point) {\n      var getControlPoint = this.getControlPoint;\n      var controlPoint = getControlPoint(center, point);\n      return [point, controlPoint, center];\n    },\n    getControlPoint: function getControlPoint(_ref4, _ref5) {\n      var _ref6 = _slicedToArray(_ref4, 2),\n        sx = _ref6[0],\n        sy = _ref6[1];\n      var _ref7 = _slicedToArray(_ref5, 2),\n        ex = _ref7[0],\n        ey = _ref7[1];\n      var getKLinePointByx = this.getKLinePointByx,\n        mergedConfig = this.mergedConfig;\n      var curvature = mergedConfig.curvature,\n        k = mergedConfig.k;\n      var mx = (sx + ex) / 2,\n        my = (sy + ey) / 2;\n      var distance = getPointDistance([sx, sy], [ex, ey]);\n      var targetLength = distance / curvature;\n      var disDived = targetLength / 2;\n      var dx = mx,\n        dy = my;\n      do {\n        dx += disDived;\n        dy = getKLinePointByx(k, [mx, my], dx)[1];\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength);\n      return [dx, dy];\n    },\n    getKLinePointByx: function getKLinePointByx(k, _ref8, x) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n        lx = _ref9[0],\n        ly = _ref9[1];\n      var y = ly - k * lx + k * x;\n      return [x, y];\n    },\n    calcLineLengths: function () {\n      var _calcLineLengths = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var $nextTick, paths, $refs;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              $nextTick = this.$nextTick, paths = this.paths, $refs = this.$refs;\n              _context2.next = 3;\n              return $nextTick();\n            case 3:\n              this.lengths = paths.map(function (foo, i) {\n                return $refs[\"path\".concat(i)][0].getTotalLength();\n              });\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function calcLineLengths() {\n        return _calcLineLengths.apply(this, arguments);\n      }\n      return calcLineLengths;\n    }(),\n    calcTimes: function calcTimes() {\n      var _this$mergedConfig = this.mergedConfig,\n        duration = _this$mergedConfig.duration,\n        points = _this$mergedConfig.points;\n      this.times = points.map(function (foo) {\n        return randomExtend.apply(void 0, _toConsumableArray(duration)) / 10;\n      });\n    },\n    calcTexts: function calcTexts() {\n      var points = this.mergedConfig.points;\n      this.texts = points.map(function (_ref10) {\n        var text = _ref10.text;\n        return text;\n      });\n    },\n    consoleClickPos: function consoleClickPos(_ref11) {\n      var offsetX = _ref11.offsetX,\n        offsetY = _ref11.offsetY;\n      var width = this.width,\n        height = this.height,\n        dev = this.dev;\n      if (!dev) return;\n      var relativeX = (offsetX / width).toFixed(2);\n      var relativeY = (offsetY / height).toFixed(2);\n      console.warn(\"dv-flyline-chart DEV: \\n Click Position is [\".concat(offsetX, \", \").concat(offsetY, \"] \\n Relative Position is [\").concat(relativeX, \", \").concat(relativeY, \"]\"));\n    }\n  }\n};",{"version":3,"names":["deepMerge","deepClone","randomExtend","getPointDistance","uuid","autoResize","name","mixins","props","config","type","Object","default","_default","dev","Boolean","data","id","ref","unique","Math","random","maskId","concat","maskCircleId","gradientId","gradient2Id","defaultConfig","centerPoint","points","lineWidth","orbitColor","flylineColor","k","curvature","flylineRadius","duration","relative","bgImgUrl","text","offset","color","fontSize","halo","show","radius","centerPointImg","width","height","url","pointsImg","mergedConfig","paths","lengths","times","texts","watch","calcData","methods","afterAutoResizeMixinInit","onResize","_calcData","_asyncToGenerator","regeneratorRuntime","mark","_callee","mergeConfig","createFlylinePaths","calcLineLengths","calcTimes","calcTexts","wrap","_callee$","_context","prev","next","stop","apply","arguments","map","item","Array","position","getPath","_ref","_ref2","_ref3","_slicedToArray","x","y","point","center","getControlPoint","controlPoint","_ref4","_ref5","_ref6","sx","sy","_ref7","ex","ey","getKLinePointByx","mx","my","distance","targetLength","disDived","dx","dy","_ref8","_ref9","lx","ly","_calcLineLengths","_callee2","$nextTick","$refs","_callee2$","_context2","foo","i","getTotalLength","_this$mergedConfig","_toConsumableArray","_ref10","consoleClickPos","_ref11","offsetX","offsetY","relativeX","toFixed","relativeY","console","warn"],"sources":["node_modules/@jiaminghi/data-view/lib/components/flylineChart/src/main.vue"],"sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart\"\n    ref=\"dv-flyline-chart\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"gradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"gradient2Id\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n\n        <circle\n          v-if=\"paths[0]\"\n          :id=\"`circle${paths[0].toString()}`\"\n          :cx=\"paths[0][2][0]\"\n          :cy=\"paths[0][2][1]\"\n        >\n          <animate\n            attributeName=\"r\"\n            :values=\"`1;${mergedConfig.halo.radius}`\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            values=\"1;0\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </defs>\n\n      <image\n        v-if=\"paths[0]\"\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\n        :width=\"mergedConfig.centerPointImg.width\"\n        :height=\"mergedConfig.centerPointImg.height\"\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\n      />\n\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\n        <use\n          v-if=\"paths[0]\"\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\n          :fill=\"`url(#${gradient2Id})`\"\n        />\n      </mask>\n\n      <use\n        v-if=\"paths[0] && mergedConfig.halo.show\"\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\n        :fill=\"mergedConfig.halo.color\"\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\n      />\n\n      <g\n        v-for=\"(path, i) in paths\"\n        :key=\"i\"\n      >\n        <defs>\n          <path\n            :id=\"`path${path.toString()}`\"\n            :ref=\"`path${i}`\"\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <use\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.orbitColor\"\n        />\n\n        <use\n          v-if=\"lengths[i]\"\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.flylineColor\"\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${lengths[i]}`\"\n            :to=\"`${lengths[i]}, 0`\"\n            :dur=\"times[i] || 0\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n\n        <mask :id=\"`mask${unique}${path.toString()}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\n            <animateMotion\n              :dur=\"times[i] || 0\"\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <image\n          :xlink:href=\"mergedConfig.pointsImg.url\"\n          :width=\"mergedConfig.pointsImg.width\"\n          :height=\"mergedConfig.pointsImg.height\"\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\n        />\n\n        <text\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\n          :fill=\"mergedConfig.text.color\"\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\n        >\n          {{ texts[i] }}\n        </text>\n\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'dv-flyline-chart',\n      unique: Math.random(),\n      maskId: `flyline-mask-id-${id}`,\n      maskCircleId: `mask-circle-id-${id}`,\n      gradientId: `gradient-id-${id}`,\n      gradient2Id: `gradient2-id-${id}`,\n\n      defaultConfig: {\n        /**\n         * @description Flyline chart center point\n         * @type {Array<Number>}\n         * @default centerPoint = [0, 0]\n         */\n        centerPoint: [0, 0],\n        /**\n         * @description Flyline start points\n         * @type {Array<Array<Number>>}\n         * @default points = []\n         * @example points = [[10, 10], [100, 100]]\n         */\n        points: [],\n        /**\n         * @description Flyline width\n         * @type {Number}\n         * @default lineWidth = 1\n         */\n        lineWidth: 1,\n        /**\n         * @description Orbit color\n         * @type {String}\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\n         */\n        orbitColor: 'rgba(103, 224, 227, .2)',\n        /**\n         * @description Flyline color\n         * @type {String}\n         * @default orbitColor = '#ffde93'\n         */\n        flylineColor: '#ffde93',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Flyline radius\n         * @type {Number}\n         * @default flylineRadius = 100\n         */\n        flylineRadius: 100,\n        /**\n         * @description Flyline animation duration\n         * @type {Array<Number>}\n         * @default duration = [20, 30]\n         */\n        duration: [20, 30],\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true,\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgUrl = ''\n         * @example bgImgUrl = './img/bg.jpg'\n         */\n        bgImgUrl: '',\n        /**\n         * @description Text configuration\n         * @type {Object}\n         */\n        text: {\n          /**\n           * @description Text offset\n           * @type {Array<Number>}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Halo configuration\n         * @type {Object}\n         */\n        halo: {\n          /**\n           * @description Weather to show halo\n           * @type {Boolean}\n           * @default show = true\n           * @example show = true | false\n           */\n          show: true,\n          /**\n           * @description Halo animation duration (10 = 1s)\n           * @type {Number}\n           * @default duration = 30\n           */\n          duration: 30,\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo max radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Center point img configuration\n         * @type {Object}\n         */\n        centerPointImg: {\n          /**\n           * @description Center point img width\n           * @type {Number}\n           * @default width = 40\n           */\n          width: 40,\n          /**\n           * @description Center point img height\n           * @type {Number}\n           * @default height = 40\n           */\n          height: 40,\n          /**\n           * @description Center point img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        },\n        /**\n         * @description Points img configuration\n         * @type {Object}\n         * @default radius = 120\n         */\n        pointsImg: {\n          /**\n           * @description Points img width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Points img height\n           * @type {Number}\n           * @default height = 15\n           */\n          height: 15,\n          /**\n           * @description Points img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        }\n      },\n\n      mergedConfig: null,\n\n      paths: [],\n      lengths: [],\n      times: [],\n      texts: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\n\n      mergeConfig()\n\n      createFlylinePaths()\n\n      await calcLineLengths()\n\n      const { calcTimes, calcTexts } = this\n\n      calcTimes()\n\n      calcTexts()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        if (item instanceof Array) {\n          return { position: item, text: '' }\n        }\n\n        return item\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    createFlylinePaths () {\n      const { getPath, mergedConfig, width, height } = this\n\n      let { centerPoint, points, relative } = mergedConfig\n\n      points = points.map(({ position }) => position)\n\n      if (relative) {\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\n        points = points.map(([x, y]) => [width * x, height * y])\n      }\n\n      this.paths = points.map(point => getPath(centerPoint, point))\n    },\n    getPath (center, point) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(center, point)\n\n      return [point, controlPoint, center]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, paths, $refs } = this\n\n      await $nextTick()\n\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\n    },\n    calcTimes () {\n      const { duration, points } = this.mergedConfig\n\n      this.times = points.map(foo => randomExtend(...duration) / 10)\n    },\n    calcTexts () {\n      const { points } = this.mergedConfig\n\n      this.texts = points.map(({ text }) => text)\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"mappings":";;;;;AAuJA,SAAAA,SAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,YAAA,EAAAC,gBAAA,EAAAC,IAAA;AAEA,OAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAF,UAAA;EACAG,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;IACAC,GAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,OAAA;IACA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA,IAAAC,EAAA,GAAAb,IAAA;IACA;MACAc,GAAA;MACAC,MAAA,EAAAC,IAAA,CAAAC,MAAA;MACAC,MAAA,qBAAAC,MAAA,CAAAN,EAAA;MACAO,YAAA,oBAAAD,MAAA,CAAAN,EAAA;MACAQ,UAAA,iBAAAF,MAAA,CAAAN,EAAA;MACAS,WAAA,kBAAAH,MAAA,CAAAN,EAAA;MAEAU,aAAA;QACA;AACA;AACA;AACA;AACA;QACAC,WAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,MAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,UAAA;QACA;AACA;AACA;AACA;AACA;QACAC,YAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,CAAA;QACA;AACA;AACA;AACA;AACA;QACAC,SAAA;QACA;AACA;AACA;AACA;AACA;QACAC,aAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;AACA;AACA;QACAC,QAAA;QACA;AACA;AACA;AACA;QACAC,IAAA;UACA;AACA;AACA;AACA;AACA;UACAC,MAAA;UACA;AACA;AACA;AACA;AACA;UACAC,KAAA;UACA;AACA;AACA;AACA;AACA;UACAC,QAAA;QACA;QACA;AACA;AACA;AACA;QACAC,IAAA;UACA;AACA;AACA;AACA;AACA;AACA;UACAC,IAAA;UACA;AACA;AACA;AACA;AACA;UACAR,QAAA;UACA;AACA;AACA;AACA;AACA;U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"}]}