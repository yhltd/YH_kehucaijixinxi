{"remainingRequest":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js!E:\\yho169\\素材\\解压包\\wb\\WeBank\\common\\util.js","dependencies":[{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\common\\util.js","mtime":1657619760000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\babel.config.js","mtime":1657619760000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\yho169\\素材\\解压包\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.date.now\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nfunction parseTel(tel) {\n  //const reg =/^[1][3-9][0-9]{9}$/;\n  var reg = new RegExp(\"/^[1][3-9][0-9]{9}$/\", \"g\");\n  return reg.test(tel);\n}\nfunction parseMoney(money, n) {\n  if (money == 'undefined' || money == null || money == '0' || money == undefined || money == \"\" || parseFloat(money) == 0) {\n    return '0.00';\n  } else {\n    if (money > 0) {\n      //金额为大于0\n      n = n > 0 && n <= 20 ? n : 2;\n      money = parseFloat((money + \"\").replace(/[^\\d\\.-]/g, \"\")).toFixed(n) + \"\";\n      var l = money.split(\".\")[0].split(\"\").reverse();\n      var r = money.split(\".\")[1];\n      var t = \"\";\n      for (var i = 0; i < l.length; i++) {\n        t += l[i] + ((i + 1) % 3 == 0 && i + 1 != l.length ? \",\" : \"\");\n      }\n      return t.split(\"\").reverse().join(\"\") + \".\" + r;\n    } else {\n      //金额小于0\n      n = n > 0 && n <= 20 ? n : 2;\n      money = parseFloat((money + \"\").replace(/[^\\d\\.-]/g, \"\")).toFixed(n) + \"\";\n      var l = money.split(\".\")[0].split(\"\").reverse();\n      l.pop();\n      var r = money.split(\".\")[1];\n      var t = \"\";\n      for (var _i = 0; _i < l.length; _i++) {\n        t += l[_i] + ((_i + 1) % 3 == 0 && _i + 1 != l.length ? \",\" : \"\");\n      }\n      return '-' + t.split(\"\").reverse().join(\"\") + \".\" + r;\n    }\n  }\n}\n/**\r\n *判断是否是数字\r\n *\r\n **/\n\nfunction isRealNum(val) {\n  // isNaN()函数 把空串 空格 以及NUll 按照0来处理 所以先去除，    \n  if (val === \"\" || val == null) {\n    return false;\n  }\n  if (!isNaN(val)) {\n    //对于空数组和只有一个数值成员的数组或全是数字组成的字符串，isNaN返回false，例如：'123'、[]、[2]、['123'],isNaN返回false,   //所以如果不需要val包含这些特殊情况，则这个判断改写为if(!isNaN(val) && typeof val === 'number' )\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction formatTime(time) {\n  if (typeof time !== 'number' || time < 0) {\n    return time;\n  }\n  var hour = parseInt(time / 3600);\n  time = time % 3600;\n  var minute = parseInt(time / 60);\n  time = time % 60;\n  var second = time;\n  return [hour, minute, second].map(function (n) {\n    n = n.toString();\n    return n[1] ? n : '0' + n;\n  }).join(':');\n}\nfunction formatLocation(longitude, latitude) {\n  if (typeof longitude === 'string' && typeof latitude === 'string') {\n    longitude = parseFloat(longitude);\n    latitude = parseFloat(latitude);\n  }\n  longitude = longitude.toFixed(2);\n  latitude = latitude.toFixed(2);\n  return {\n    longitude: longitude.toString().split('.'),\n    latitude: latitude.toString().split('.')\n  };\n}\nvar dateUtils = {\n  UNITS: {\n    '年': 31557600000,\n    '月': 2629800000,\n    '天': 86400000,\n    '小时': 3600000,\n    '分钟': 60000,\n    '秒': 1000\n  },\n  humanize: function humanize(milliseconds) {\n    var humanize = '';\n    for (var key in this.UNITS) {\n      if (milliseconds >= this.UNITS[key]) {\n        humanize = Math.floor(milliseconds / this.UNITS[key]) + key + '前';\n        break;\n      }\n    }\n    return humanize || '刚刚';\n  },\n  format: function format(dateStr) {\n    var date = this.parse(dateStr);\n    var diff = Date.now() - date.getTime();\n    if (diff < this.UNITS['天']) {\n      return this.humanize(diff);\n    }\n    var _format = function _format(number) {\n      return number < 10 ? '0' + number : number;\n    };\n    return date.getFullYear() + '/' + _format(date.getMonth() + 1) + '/' + _format(date.getDate()) + '-' + _format(date.getHours()) + ':' + _format(date.getMinutes());\n  },\n  parse: function parse(str) {\n    //将\"yyyy-mm-dd HH:MM:ss\"格式的字符串，转化为一个Date对象\n    var a = str.split(/[^0-9]/);\n    return new Date(a[0], a[1] - 1, a[2], a[3], a[4], a[5]);\n  },\n  dateNomal: function dateNomal(target) {\n    return dateUtils.dateToString(target, \"yyyy-MM-dd hh:mm:ss\");\n  },\n  dateYear: function dateYear(target) {\n    return dateUtils.dateToString(target, \"yyyy-MM\");\n  },\n  dateToString: function dateToString(target, fmt) {\n    var o = {\n      \"M+\": target.getMonth() + 1,\n      //月份 \n      \"d+\": target.getDate(),\n      //日 \n      \"h+\": target.getHours(),\n      //小时 \n      \"m+\": target.getMinutes(),\n      //分 \n      \"s+\": target.getSeconds(),\n      //秒 \n      \"q+\": Math.floor((target.getMonth() + 3) / 3),\n      //季度 \n      \"S\": target.getMilliseconds() //毫秒 \n    };\n\n    if (/(y+)/.test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, (target.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (var k in o) {\n      if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n      }\n    }\n    return fmt;\n  }\n};\nexport default {\n  formatTime: formatTime,\n  formatLocation: formatLocation,\n  dateUtils: dateUtils,\n  parseMoney: parseMoney,\n  isRealNum: isRealNum,\n  parseTel: parseTel\n};",{"version":3,"names":["parseTel","tel","reg","RegExp","test","parseMoney","money","n","undefined","parseFloat","replace","toFixed","l","split","reverse","r","t","i","length","join","pop","isRealNum","val","isNaN","formatTime","time","hour","parseInt","minute","second","map","toString","formatLocation","longitude","latitude","dateUtils","UNITS","humanize","milliseconds","key","Math","floor","format","dateStr","date","parse","diff","Date","now","getTime","_format","number","getFullYear","getMonth","getDate","getHours","getMinutes","str","a","dateNomal","target","dateToString","dateYear","fmt","o","getSeconds","getMilliseconds","$1","substr","k"],"sources":["E:/yho169/素材/解压包/wb/WeBank/common/util.js"],"sourcesContent":["\r\nfunction parseTel(tel) {\n //const reg =/^[1][3-9][0-9]{9}$/;\n var reg = new RegExp(\"/^[1][3-9][0-9]{9}$/\",\"g\")\n return reg.test(tel) ;\n}\r\n\r\nfunction parseMoney(money, n) {\r\n\tif (money == 'undefined' || money == null || money == '0' || money == undefined || money == \"\" ||\r\n\t\tparseFloat(money) == 0) {\r\n\t\treturn '0.00';\r\n\t} else {\r\n\t\tif (money > 0) { //金额为大于0\r\n\t\t\tn = n > 0 && n <= 20 ? n : 2;\r\n\t\t\tmoney = parseFloat((money + \"\").replace(/[^\\d\\.-]/g, \"\")).toFixed(n) + \"\";\r\n\t\t\tvar l = money.split(\".\")[0].split(\"\").reverse();\r\n\t\t\tvar r = money.split(\".\")[1];\r\n\t\t\tvar t = \"\";\r\n\t\t\tfor (let i = 0; i < l.length; i++) {\r\n\t\t\t\tt += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? \",\" : \"\");\r\n\t\t\t}\r\n\t\t\treturn t.split(\"\").reverse().join(\"\") + \".\" + r;\r\n\t\t} else { //金额小于0\r\n\t\t\tn = n > 0 && n <= 20 ? n : 2;\r\n\t\t\tmoney = parseFloat((money + \"\").replace(/[^\\d\\.-]/g, \"\")).toFixed(n) + \"\";\r\n\t\t\tvar l = money.split(\".\")[0].split(\"\").reverse();\r\n\t\t\tl.pop();\r\n\t\t\tvar r = money.split(\".\")[1];\r\n\t\t\tvar t = \"\";\r\n\t\t\tfor (let i = 0; i < l.length; i++) {\r\n\t\t\t\tt += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? \",\" : \"\");\r\n\t\t\t}\r\n\t\t\treturn '-' + t.split(\"\").reverse().join(\"\") + \".\" + r;\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n *判断是否是数字\r\n *\r\n **/\r\n\r\nfunction isRealNum(val) {\r\n\t// isNaN()函数 把空串 空格 以及NUll 按照0来处理 所以先去除，    \r\n\tif (val === \"\" || val == null) {\r\n\t\treturn false;\r\n\t}\r\n\tif (!isNaN(val)) {\r\n\t\t//对于空数组和只有一个数值成员的数组或全是数字组成的字符串，isNaN返回false，例如：'123'、[]、[2]、['123'],isNaN返回false,   //所以如果不需要val包含这些特殊情况，则这个判断改写为if(!isNaN(val) && typeof val === 'number' )\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction formatTime(time) {\r\n\tif (typeof time !== 'number' || time < 0) {\r\n\t\treturn time\r\n\t}\r\n\r\n\tvar hour = parseInt(time / 3600)\r\n\ttime = time % 3600\r\n\tvar minute = parseInt(time / 60)\r\n\ttime = time % 60\r\n\tvar second = time\r\n\r\n\treturn ([hour, minute, second]).map(function(n) {\r\n\t\tn = n.toString()\r\n\t\treturn n[1] ? n : '0' + n\r\n\t}).join(':')\r\n}\r\n\r\nfunction formatLocation(longitude, latitude) {\r\n\tif (typeof longitude === 'string' && typeof latitude === 'string') {\r\n\t\tlongitude = parseFloat(longitude)\r\n\t\tlatitude = parseFloat(latitude)\r\n\t}\r\n\r\n\tlongitude = longitude.toFixed(2)\r\n\tlatitude = latitude.toFixed(2)\r\n\r\n\treturn {\r\n\t\tlongitude: longitude.toString().split('.'),\r\n\t\tlatitude: latitude.toString().split('.')\r\n\t}\r\n}\r\nvar dateUtils = {\r\n\tUNITS: {\r\n\t\t'年': 31557600000,\r\n\t\t'月': 2629800000,\r\n\t\t'天': 86400000,\r\n\t\t'小时': 3600000,\r\n\t\t'分钟': 60000,\r\n\t\t'秒': 1000\r\n\t},\r\n\thumanize: function(milliseconds) {\r\n\t\tvar humanize = '';\r\n\t\tfor (var key in this.UNITS) {\r\n\t\t\tif (milliseconds >= this.UNITS[key]) {\r\n\t\t\t\thumanize = Math.floor(milliseconds / this.UNITS[key]) + key + '前';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn humanize || '刚刚';\r\n\t},\r\n\tformat: function(dateStr) {\r\n\t\tvar date = this.parse(dateStr)\r\n\t\tvar diff = Date.now() - date.getTime();\r\n\t\tif (diff < this.UNITS['天']) {\r\n\t\t\treturn this.humanize(diff);\r\n\t\t}\r\n\t\tvar _format = function(number) {\r\n\t\t\treturn (number < 10 ? ('0' + number) : number);\r\n\t\t};\r\n\t\treturn date.getFullYear() + '/' + _format(date.getMonth() + 1) + '/' + _format(date.getDate()) + '-' +\r\n\t\t\t_format(date.getHours()) + ':' + _format(date.getMinutes());\r\n\t},\r\n\tparse: function(str) { //将\"yyyy-mm-dd HH:MM:ss\"格式的字符串，转化为一个Date对象\r\n\t\tvar a = str.split(/[^0-9]/);\r\n\t\treturn new Date(a[0], a[1] - 1, a[2], a[3], a[4], a[5]);\r\n\t},\r\n\tdateNomal: function(target) {\r\n\t\treturn dateUtils.dateToString(target, \"yyyy-MM-dd hh:mm:ss\");\r\n\t},\r\n\tdateYear: function(target) {\r\n\t\treturn dateUtils.dateToString(target, \"yyyy-MM\");\r\n\t},\r\n\tdateToString: function(target, fmt) {\r\n\t\tvar o = {\r\n\t\t\t\"M+\": target.getMonth() + 1, //月份 \r\n\t\t\t\"d+\": target.getDate(), //日 \r\n\t\t\t\"h+\": target.getHours(), //小时 \r\n\t\t\t\"m+\": target.getMinutes(), //分 \r\n\t\t\t\"s+\": target.getSeconds(), //秒 \r\n\t\t\t\"q+\": Math.floor((target.getMonth() + 3) / 3), //季度 \r\n\t\t\t\"S\": target.getMilliseconds() //毫秒 \r\n\t\t};\r\n\t\tif (/(y+)/.test(fmt)) {\r\n\t\t\tfmt = fmt.replace(RegExp.$1, (target.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n\t\t}\r\n\t\tfor (var k in o) {\r\n\t\t\tif (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n\t\t\t\tfmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[\r\n\t\t\t\t\tk]).length)));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fmt;\r\n\t}\r\n};\r\n\r\nexport default {\r\n\tformatTime: formatTime,\r\n\tformatLocation: formatLocation,\r\n\tdateUtils: dateUtils,\r\n\tparseMoney: parseMoney,\r\n\tisRealNum: isRealNum,\r\n\tparseTel: parseTel\r\n}\n"],"mappings":"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"}]}