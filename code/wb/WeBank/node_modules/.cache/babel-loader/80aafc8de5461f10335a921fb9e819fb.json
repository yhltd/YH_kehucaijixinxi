{"remainingRequest":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox12\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox12\\src\\main.vue","mtime":1681782973541},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\babel.config.js","mtime":1681782968933},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1681782976971},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681782977946},{"path":"E:\\工作(林)\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1681783170949}],"contextDependencies":[],"result":["import autoResize from \"../../../mixin/autoResize\";\nimport { uuid } from \"../../../util/index\";\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nimport { fade } from '@jiaminghi/color';\nexport default {\n  name: 'DvBorderBox12',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data: function data() {\n    var id = uuid();\n    return {\n      ref: 'border-box-12',\n      filterId: \"borderr-box-12-filterId-\".concat(id),\n      defaultColor: ['#2e6099', '#7ce7fd'],\n      mergedColor: []\n    };\n  },\n  watch: {\n    color: function color() {\n      var mergeColor = this.mergeColor;\n      mergeColor();\n    }\n  },\n  methods: {\n    mergeColor: function mergeColor() {\n      var color = this.color,\n        defaultColor = this.defaultColor;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    },\n    fade: fade\n  },\n  mounted: function mounted() {\n    var mergeColor = this.mergeColor;\n    mergeColor();\n  }\n};",{"version":3,"names":["autoResize","uuid","deepMerge","deepClone","fade","name","mixins","props","color","type","Array","default","_default","backgroundColor","String","data","id","ref","filterId","concat","defaultColor","mergedColor","watch","mergeColor","methods","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/borderBox12/src/main.vue"],"sourcesContent":["<template>\r\n  <div class=\"dv-border-box-12\" :ref=\"ref\">\r\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\r\n      <defs>\r\n        <filter :id=\"filterId\" height=\"150%\" width=\"150%\" x=\"-25%\" y=\"-25%\">\r\n          <feMorphology operator=\"dilate\" radius=\"1\" in=\"SourceAlpha\" result=\"thicken\" />\r\n          <feGaussianBlur in=\"thicken\" stdDeviation=\"2\" result=\"blurred\" />\r\n          <feFlood :flood-color=\"fade(mergedColor[1] || defaultColor[1], 70)\" result=\"glowColor\">\r\n            <animate\r\n              attributeName=\"flood-color\"\r\n              :values=\"`\r\n                ${fade(mergedColor[1] || defaultColor[1], 70)};\r\n                ${fade(mergedColor[1] || defaultColor[1], 30)};\r\n                ${fade(mergedColor[1] || defaultColor[1], 70)};\r\n              `\"\r\n              dur=\"3s\"\r\n              begin=\"0s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </feFlood>\r\n          <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlowColored\" />\r\n          <feMerge>\r\n            <feMergeNode in=\"softGlowColored\"/>\r\n            <feMergeNode in=\"SourceGraphic\"/>\r\n          </feMerge>\r\n        </filter>\r\n      </defs>\r\n\r\n      <path\r\n        v-if=\"width && height\"\r\n        :fill=\"backgroundColor\"\r\n        stroke-width=\"2\"\r\n        :stroke=\"mergedColor[0]\"\r\n        :d=\"`\r\n          M15 5 L ${width - 15} 5 Q ${width - 5} 5, ${width - 5} 15\r\n          L ${width - 5} ${height - 15} Q ${width - 5} ${height - 5}, ${width - 15} ${height - 5}\r\n          L 15, ${height - 5} Q 5 ${height - 5} 5 ${height - 15} L 5 15\r\n          Q 5 5 15 5\r\n        `\"\r\n      />\r\n\r\n      <path\r\n        stroke-width=\"2\"\r\n        fill=\"transparent\"\r\n        stroke-linecap=\"round\"\r\n        :filter=\"`url(#${filterId})`\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :d=\"`M 20 5 L 15 5 Q 5 5 5 15 L 5 20`\"\r\n      />\r\n\r\n      <path\r\n        stroke-width=\"2\"\r\n        fill=\"transparent\"\r\n        stroke-linecap=\"round\"\r\n        :filter=\"`url(#${filterId})`\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :d=\"`M ${width - 20} 5 L ${width - 15} 5 Q ${width - 5} 5 ${width - 5} 15 L ${width - 5} 20`\"\r\n      />\r\n\r\n      <path\r\n        stroke-width=\"2\"\r\n        fill=\"transparent\"\r\n        stroke-linecap=\"round\"\r\n        :filter=\"`url(#${filterId})`\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :d=\"`\r\n          M ${width - 20} ${height - 5} L ${width - 15} ${height - 5}\r\n          Q ${width - 5} ${height - 5} ${width - 5} ${height - 15}\r\n          L ${width - 5} ${height - 20}\r\n        `\"\r\n      />\r\n\r\n      <path\r\n        stroke-width=\"2\"\r\n        fill=\"transparent\"\r\n        stroke-linecap=\"round\"\r\n        :filter=\"`url(#${filterId})`\"\r\n        :stroke=\"mergedColor[1]\"\r\n        :d=\"`\r\n          M 20 ${height - 5} L 15 ${height - 5}\r\n          Q 5 ${height - 5} 5 ${height - 15}\r\n          L 5 ${height - 20}\r\n        `\"\r\n      />\r\n    </svg>\r\n\r\n    <div class=\"border-box-content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\nimport { uuid } from '../../../util/index'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport { fade } from '@jiaminghi/color'\r\n\r\nexport default {\r\n  name: 'DvBorderBox12',\r\n  mixins: [autoResize],\r\n  props: {\r\n    color: {\r\n      type: Array,\r\n      default: () => ([])\r\n    },\r\n    backgroundColor: {\r\n      type: String,\r\n      default: 'transparent'\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      ref: 'border-box-12',\r\n      filterId: `borderr-box-12-filterId-${id}`,\r\n\r\n      defaultColor: ['#2e6099', '#7ce7fd'],\r\n\r\n      mergedColor: []\r\n    }\r\n  },\r\n  watch: {\r\n    color () {\r\n      const { mergeColor } = this\r\n\r\n      mergeColor()\r\n    }\r\n  },\r\n  methods: {\r\n    mergeColor () {\r\n      const { color, defaultColor } = this\r\n\r\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\r\n    },\r\n    fade\r\n  },\r\n  mounted () {\r\n    const { mergeColor } = this\r\n\r\n    mergeColor()\r\n  }\r\n}\r\n</script>"],"mappings":"AA6FA,OAAAA,UAAA;AACA,SAAAC,IAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,IAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAN,UAAA;EACAO,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,WAAAC,SAAA;QAAA;MAAA;IACA;IACAC,eAAA;MACAJ,IAAA,EAAAK,MAAA;MACAH,OAAA;IACA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA,IAAAC,EAAA,GAAAf,IAAA;IACA;MACAgB,GAAA;MACAC,QAAA,6BAAAC,MAAA,CAAAH,EAAA;MAEAI,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAd,KAAA,WAAAA,MAAA;MACA,IAAAe,UAAA,QAAAA,UAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAD,UAAA,WAAAA,WAAA;MACA,IAAAf,KAAA,QAAAA,KAAA;QAAAY,YAAA,QAAAA,YAAA;MAEA,KAAAC,WAAA,GAAAnB,SAAA,CAAAC,SAAA,CAAAiB,YAAA,SAAAZ,KAAA;IACA;IACAJ,IAAA,EAAAA;EACA;EACAqB,OAAA,WAAAA,QAAA;IACA,IAAAF,UAAA,QAAAA,UAAA;IAEAA,UAAA;EACA;AACA"}]}