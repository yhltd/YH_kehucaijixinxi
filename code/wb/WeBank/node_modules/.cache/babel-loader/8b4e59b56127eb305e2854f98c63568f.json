{"remainingRequest":"E:\\yho169\\工作\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js!E:\\yho169\\工作\\YH_kehucaijixinxi\\code\\wb\\WeBank\\common\\common.js","dependencies":[{"path":"E:\\yho169\\工作\\YH_kehucaijixinxi\\code\\wb\\WeBank\\common\\common.js","mtime":1657619760000},{"path":"E:\\yho169\\工作\\YH_kehucaijixinxi\\code\\wb\\WeBank\\babel.config.js","mtime":1657619760000},{"path":"E:\\yho169\\工作\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\yho169\\工作\\YH_kehucaijixinxi\\code\\wb\\WeBank\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.trim\";\nvar common = {\n  //判断传入的值是否不为null，undefined，空字符串，过滤前后的空格\n  hasLength: function hasLength(target) {\n    return !(undefined === target || null === target || \"\" === target || target.trim().length === 0);\n  },\n  //将json转换成字符串\n  toJson: function toJson(object) {\n    return JSON.stringify(object);\n  },\n  //将字符串转换成json\n  toObject: function toObject(valString) {\n    return JSON.parse(valString);\n  },\n  //将对象转换成json\n  deepClone: function deepClone(object) {\n    return common.toObject(common.toJson(object));\n  },\n  //比较两个对象是否相等\n  compareObjectDeep: function compareObjectDeep(val1, val2) {\n    return common.toJson(val1) === common.toJson(val2);\n  }\n};\n//cos对象存储\nexport default common;",{"version":3,"names":["common","hasLength","target","undefined","trim","length","toJson","object","JSON","stringify","toObject","valString","parse","deepClone","compareObjectDeep","val1","val2"],"sources":["E:/yho169/工作/YH_kehucaijixinxi/code/wb/WeBank/common/common.js"],"sourcesContent":["const common = {\r\n\t//判断传入的值是否不为null，undefined，空字符串，过滤前后的空格\r\n\thasLength: function(target) {\r\n\t\treturn !(undefined === target || null === target || \"\" === target || target.trim().length === 0);\r\n\t},\r\n\t//将json转换成字符串\r\n\ttoJson: (object) => {\r\n\t\treturn JSON.stringify(object);\r\n\t},\r\n\t//将字符串转换成json\r\n\ttoObject: (valString) => {\r\n\t\treturn JSON.parse(valString);\r\n\t},\r\n\t//将对象转换成json\r\n\tdeepClone: (object) => {\r\n\t\treturn common.toObject(common.toJson(object));\r\n\t},\r\n\t//比较两个对象是否相等\r\n\tcompareObjectDeep: (val1, val2) => {\r\n\t\treturn common.toJson(val1) === common.toJson(val2);\r\n\t}\r\n};\r\n//cos对象存储\r\nexport default common;"],"mappings":";AAAA,IAAMA,MAAM,GAAG;EACd;EACAC,SAAS,EAAE,SAAAA,UAASC,MAAM,EAAE;IAC3B,OAAO,EAAEC,SAAS,KAAKD,MAAM,IAAI,IAAI,KAAKA,MAAM,IAAI,EAAE,KAAKA,MAAM,IAAIA,MAAM,CAACE,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,CAAC;EACjG,CAAC;EACD;EACAC,MAAM,EAAE,SAAAA,OAACC,MAAM,EAAK;IACnB,OAAOC,IAAI,CAACC,SAAS,CAACF,MAAM,CAAC;EAC9B,CAAC;EACD;EACAG,QAAQ,EAAE,SAAAA,SAACC,SAAS,EAAK;IACxB,OAAOH,IAAI,CAACI,KAAK,CAACD,SAAS,CAAC;EAC7B,CAAC;EACD;EACAE,SAAS,EAAE,SAAAA,UAACN,MAAM,EAAK;IACtB,OAAOP,MAAM,CAACU,QAAQ,CAACV,MAAM,CAACM,MAAM,CAACC,MAAM,CAAC,CAAC;EAC9C,CAAC;EACD;EACAO,iBAAiB,EAAE,SAAAA,kBAACC,IAAI,EAAEC,IAAI,EAAK;IAClC,OAAOhB,MAAM,CAACM,MAAM,CAACS,IAAI,CAAC,KAAKf,MAAM,CAACM,MAAM,CAACU,IAAI,CAAC;EACnD;AACD,CAAC;AACD;AACA,eAAehB,MAAM"}]}